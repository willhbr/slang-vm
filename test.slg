(module Main)
(import Sequence)
(import Kernel)

(defn reduce [collection init func]
  (let [hd (head collection)]
    (if hd
      (recur (tail collection) (func init hd) func)
      init)))

(defn map [collection func]
  (reduce collection []
    (fn [acc val] (conj acc (func val)))))


(-> [1 2 3]
  (map (fn [a] (* a 2)))
  IO.puts)
